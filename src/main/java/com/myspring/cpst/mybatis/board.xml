<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myspring.cpst.board">



	<!-- <resultMap id="MunicipalityMap"
		type="se.karl.school.model.domain.Municipality">
		<id property="code" column="MUNICIPALITY_CODE" />
		<result property="name" column="MUNICIPALITY" />
		<collection property="schools"
			ofType="se.karl.school.model.domain.School" javaType="java.util.List">
			<id property="municipalityCode" column="MUNICIPALITY_CODE" />
			<result property="id" column="UPSEC_SCHOOL_ID" />
			<result property="code" column="UPSEC_SCHOOL_CODE" />
			<result property="name" column="UPSEC_SCHOOL" />
		</collection>
	</resultMap> -->

	<insert id="insertPost" parameterType="java.util.Map">
		INSERT INTO CPST_BOARD
		<choose>
		   <when test="imageFile != '' and imageFile != null">
			(postNum, title, content, writer, writerImage, writerNick, writerMajor, imageFile, hit)
			VALUES (cpst_board_seq.nextval, #{title}, #{content}, ${writer},
			#{writerImage}, #{writerNick}, #{writerMajor}, #{imageFile}, 0)
			</when>
			<when test="imageFile == null">
			(postNum, title, content, writer, writerImage, writerNick, writerMajor, hit)
			VALUES (cpst_board_seq.nextval, #{title}, #{content}, ${writer},
			#{writerImage}, #{writerNick}, #{writerMajor}, 0)
			</when>
		</choose>
	</insert>


	<!-- <select id="selectAllPosts" resultType="com.myspring.cpst.board.BoardVO" 
		> -->
	<select id="selectAllPosts" resultType="com.myspring.cpst.board.BoardVO">
    <![CDATA[
    select cb.*, 
    (select count(*) from cpst_comment where cb.postNum = cpst_comment.post) 
    as comment_count 
    from cpst_board cb ORDER BY createdAt DESC
    ]]>
	</select>
	
	
	<select id="selectPost" resultType="com.myspring.cpst.board.BoardVO">
    <![CDATA[
       SELECT * from cpst_board where postNum = #{postNum}	
    ]]>
	</select>
	
	
	<select id="selectPostsBySearch" resultType="com.myspring.cpst.board.BoardVO">
    <![CDATA[
        SELECT * from cpst_board 
		where title like '%' || #{searchText} || '%' 
		or content like '%' || #{searchText} || '%' order by createdAt desc
    ]]>
	</select>
	
	<update id="updatePost">
		update cpst_board
		<choose>
			<when test="imageFile != '' and imageFile != null">
			 	set title = #{title}, content = #{content}, imageFile= #{imageFile} 
				where postNum = #{postNum}
			</when>
			<otherwise>
				set title = #{title}, content = #{content} where postNum = #{postNum}
  		    </otherwise>
		</choose>
	</update>
	
	<update id="deleteFile">
		update cpst_board set imageFile = null where postNum = #{postNum}
	</update>
	
	<select id="selectPostsByHit" resultType="com.myspring.cpst.board.BoardVO">
    <![CDATA[
       SELECT * from cpst_board order by hit desc FETCH FIRST 5 rows only
    ]]>
	</select>
	
	<update id="updateHit">
    <![CDATA[
       update cpst_board set hit = hit + 1 where postNum = #{postNum}	
    ]]>
	</update>
	
	
	<insert id="insertComment" parameterType="java.util.Map">
		INSERT INTO CPST_COMMENT
		(commentNum, content, post, writer, writerNick, writerImage)
		VALUES
		(#{commentNum}, #{content}, #{post}, #{writerSid}, #{writerNick}, #{writerImage})
	</insert>


	<select id="selectAllComments" resultType="com.myspring.cpst.board.CommentVO">
	<![CDATA[
		select * from cpst_comment where post = #{postNum} order by createdAt desc 
	]]>
	</select>
	
		
	<select id="selectComment" resultType="com.myspring.cpst.board.CommentVO">
		select * from cpst_comment where commentNum = #{commentNum}
	</select>
	
  <select id="selectNewCommentNum" resultType="int"  >
		<![CDATA[
			SELECT  max(commentNum)+1 from cpst_comment		
		]]>
	</select>
	
</mapper>


	<!-- update cpst_board 
		<choose>
		   <when test="imageFile != '' and imageFile != null">
			set (title, content, imageFile) VALUES (#{title}, #{content}, #{imageFile})
			</when>
			<when test="imageFile == null">
			set (title, content) VALUES (#{title}, #{content})
			</when>
		</choose>
		where postNum = #{postNum} -->
